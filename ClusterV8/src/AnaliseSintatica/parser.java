
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Mon May 20 20:00:45 BRT 2019
//----------------------------------------------------

package AnaliseSintatica;

import java_cup.runtime.*;
import java.util.*;
import java.io.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Mon May 20 20:00:45 BRT 2019
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\173\000\002\002\004\000\002\002\004\000\002\002" +
    "\005\000\002\003\003\000\002\003\003\000\002\003\003" +
    "\000\002\003\003\000\002\003\003\000\002\003\003\000" +
    "\002\003\003\000\002\003\003\000\002\003\003\000\002" +
    "\003\003\000\002\003\003\000\002\003\003\000\002\003" +
    "\003\000\002\003\003\000\002\003\003\000\002\003\003" +
    "\000\002\003\003\000\002\003\003\000\002\003\003\000" +
    "\002\003\003\000\002\003\003\000\002\003\003\000\002" +
    "\003\003\000\002\025\003\000\002\025\003\000\002\025" +
    "\003\000\002\025\003\000\002\025\003\000\002\025\003" +
    "\000\002\025\003\000\002\025\003\000\002\025\003\000" +
    "\002\025\003\000\002\025\003\000\002\025\003\000\002" +
    "\025\003\000\002\025\003\000\002\025\003\000\002\025" +
    "\003\000\002\025\003\000\002\025\003\000\002\025\003" +
    "\000\002\025\003\000\002\025\003\000\002\025\003\000" +
    "\002\024\003\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\024\003\000\002\024" +
    "\003\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\024\003\000\002\024\003\000\002\024\003\000" +
    "\002\024\003\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\024\003\000\002\024" +
    "\003\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\024\003\000\002\042\017\000\002\042\010\000" +
    "\002\042\011\000\002\043\006\000\002\043\006\000\002" +
    "\043\007\000\002\043\007\000\002\044\006\000\002\044" +
    "\007\000\002\035\005\000\002\035\006\000\002\004\007" +
    "\000\002\004\010\000\002\046\010\000\002\046\010\000" +
    "\002\005\007\000\002\005\007\000\002\005\010\000\002" +
    "\005\010\000\002\010\005\000\002\010\005\000\002\010" +
    "\003\000\002\045\005\000\002\045\003\000\002\030\004" +
    "\000\002\030\005\000\002\037\006\000\002\037\007\000" +
    "\002\017\017\000\002\017\020\000\002\020\011\000\002" +
    "\020\012\000\002\011\003\000\002\011\003\000\002\011" +
    "\003\000\002\036\006\000\002\036\003\000\002\040\004" +
    "\000\002\040\005\000\002\041\004\000\002\041\005\000" +
    "\002\033\003\000\002\026\007\000\002\026\010\000\002" +
    "\034\007\000\002\034\010\000\002\032\005\000\002\032" +
    "\005\000\002\032\003\000\002\031\005\000\002\031\006" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\317\000\004\036\005\001\002\000\004\002\321\001" +
    "\002\000\036\004\027\005\030\007\053\014\051\015\025" +
    "\022\054\025\046\027\044\030\026\031\047\032\036\035" +
    "\020\041\021\042\045\001\002\000\022\006\ufffc\010\ufffc" +
    "\012\ufffc\013\ufffc\031\ufffc\037\ufffc\044\ufffc\045\ufffc\001" +
    "\002\000\022\006\uffed\010\uffed\012\uffed\013\uffed\031\uffed" +
    "\037\uffed\044\uffed\045\uffed\001\002\000\022\006\uffea\010" +
    "\uffea\012\uffea\013\uffea\031\uffea\037\uffea\044\uffea\045\uffea" +
    "\001\002\000\022\006\ufff2\010\ufff2\012\ufff2\013\ufff2\031" +
    "\ufff2\037\ufff2\044\ufff2\045\ufff2\001\002\000\022\006\ufffe" +
    "\010\ufffe\012\ufffe\013\ufffe\031\ufffe\037\ufffe\044\ufffe\045" +
    "\ufffe\001\002\000\022\006\ufff7\010\ufff7\012\ufff7\013\ufff7" +
    "\031\ufff7\037\ufff7\044\ufff7\045\ufff7\001\002\000\022\006" +
    "\ufffb\010\ufffb\012\ufffb\013\ufffb\031\ufffb\037\ufffb\044\ufffb" +
    "\045\ufffb\001\002\000\022\006\ufff3\010\ufff3\012\ufff3\013" +
    "\ufff3\031\ufff3\037\ufff3\044\ufff3\045\ufff3\001\002\000\022" +
    "\006\uffec\010\uffec\012\uffec\013\uffec\031\uffec\037\uffec\044" +
    "\uffec\045\uffec\001\002\000\022\006\ufff0\010\ufff0\012\ufff0" +
    "\013\ufff0\031\ufff0\037\ufff0\044\ufff0\045\ufff0\001\002\000" +
    "\004\007\315\001\002\000\004\007\300\001\002\000\022" +
    "\006\uffeb\010\uffeb\012\uffeb\013\uffeb\031\uffeb\037\uffeb\044" +
    "\uffeb\045\uffeb\001\002\000\022\006\ufff8\010\ufff8\012\ufff8" +
    "\013\ufff8\031\ufff8\037\ufff8\044\ufff8\045\ufff8\001\002\000" +
    "\056\004\uff89\005\uff89\006\uff89\007\uff89\010\uff89\012\uff89" +
    "\013\uff89\014\uff89\015\uff89\020\uff89\022\uff89\025\uff89\027" +
    "\uff89\030\uff89\031\uff89\032\uff89\035\uff89\037\uff89\041\uff89" +
    "\042\uff89\044\uff89\045\uff89\001\002\000\062\004\uff99\005" +
    "\uff99\006\uff99\007\uff99\010\uff99\012\uff99\013\uff99\014\uff99" +
    "\015\uff99\016\uff99\020\uff99\021\uff99\022\uff99\025\uff99\027" +
    "\uff99\030\uff99\031\uff99\032\uff99\035\uff99\037\uff99\041\uff99" +
    "\042\uff99\044\uff99\045\uff99\001\002\000\022\006\uff90\010" +
    "\uff90\012\uff90\013\uff90\031\uff90\037\uff90\044\uff90\045\uff90" +
    "\001\002\000\014\007\115\014\051\015\025\022\056\035" +
    "\020\001\002\000\064\004\uff95\005\uff95\006\uff95\007\uff95" +
    "\010\uff95\011\270\012\uff95\013\uff95\014\uff95\015\uff95\022" +
    "\uff95\023\uff95\024\uff95\025\uff95\027\uff95\030\uff95\031\uff95" +
    "\032\uff95\033\uff95\035\uff95\037\uff95\041\uff95\042\uff95\044" +
    "\uff95\045\uff95\001\002\000\022\006\ufff6\010\ufff6\012\ufff6" +
    "\013\ufff6\031\ufff6\037\ufff6\044\ufff6\045\ufff6\001\002\000" +
    "\022\006\ufffd\010\ufffd\012\ufffd\013\ufffd\031\ufffd\037\ufffd" +
    "\044\ufffd\045\ufffd\001\002\000\022\006\225\010\uffe9\012" +
    "\uffe9\013\uffe9\031\uffe9\037\uffe9\044\226\045\uffe9\001\002" +
    "\000\022\006\uffef\010\uffef\012\uffef\013\uffef\031\uffef\037" +
    "\uffef\044\uffef\045\uffef\001\002\000\030\006\ufff1\010\ufff1" +
    "\012\ufff1\013\ufff1\023\211\024\212\031\ufff1\033\213\037" +
    "\ufff1\044\ufff1\045\ufff1\001\002\000\004\005\030\001\002" +
    "\000\022\006\ufff9\010\ufff9\012\ufff9\013\ufff9\031\ufff9\037" +
    "\ufff9\044\ufff9\045\ufff9\001\002\000\004\031\265\001\002" +
    "\000\022\006\uffee\010\uffee\012\uffee\013\uffee\031\uffee\037" +
    "\uffee\044\uffee\045\uffee\001\002\000\022\006\uffe8\010\uffe8" +
    "\012\uffe8\013\uffe8\031\uffe8\037\uffe8\044\uffe8\045\uffe8\001" +
    "\002\000\022\006\156\010\ufffa\012\ufffa\013\ufffa\031\ufffa" +
    "\037\ufffa\044\157\045\ufffa\001\002\000\004\007\256\001" +
    "\002\000\004\007\252\001\002\000\004\007\110\001\002" +
    "\000\004\002\000\001\002\000\022\006\ufff4\010\ufff4\012" +
    "\ufff4\013\ufff4\031\ufff4\037\ufff4\044\ufff4\045\ufff4\001\002" +
    "\000\062\004\uff98\005\uff98\006\uff98\007\uff98\010\uff98\012" +
    "\uff98\013\uff98\014\uff98\015\uff98\016\uff98\020\uff98\021\uff98" +
    "\022\uff98\025\uff98\027\uff98\030\uff98\031\uff98\032\uff98\035" +
    "\uff98\037\uff98\041\uff98\042\uff98\044\uff98\045\uff98\001\002" +
    "\000\024\006\ufff5\010\ufff5\012\ufff5\013\ufff5\020\100\031" +
    "\ufff5\037\ufff5\044\ufff5\045\ufff5\001\002\000\034\004\027" +
    "\005\030\007\053\014\051\015\025\022\054\025\046\027" +
    "\044\030\026\032\036\035\020\041\021\042\045\001\002" +
    "\000\026\006\uff97\010\uff97\012\uff97\013\uff97\017\055\020" +
    "\uff97\031\uff97\037\uff97\044\uff97\045\uff97\001\002\000\014" +
    "\007\060\014\051\015\025\022\056\026\061\001\002\000" +
    "\062\004\uff97\005\uff97\006\uff97\007\uff97\010\uff97\012\uff97" +
    "\013\uff97\014\uff97\015\uff97\016\uff97\020\uff97\021\uff97\022" +
    "\uff97\025\uff97\027\uff97\030\uff97\031\uff97\032\uff97\035\uff97" +
    "\037\uff97\041\uff97\042\uff97\044\uff97\045\uff97\001\002\000" +
    "\056\004\027\005\030\006\uff88\007\053\010\uff88\012\uff88" +
    "\013\uff88\014\051\015\025\020\100\022\054\025\046\027" +
    "\044\030\026\031\uff88\032\036\035\020\037\uff88\041\021" +
    "\042\045\044\uff88\045\uff88\001\002\000\012\007\060\014" +
    "\051\015\025\022\056\001\002\000\004\007\062\001\002" +
    "\000\012\014\051\015\025\022\056\042\045\001\002\000" +
    "\004\010\075\001\002\000\004\010\065\001\002\000\004" +
    "\022\066\001\002\000\004\017\067\001\002\000\004\026" +
    "\070\001\002\000\004\007\071\001\002\000\010\014\051" +
    "\015\025\022\056\001\002\000\004\010\073\001\002\000" +
    "\034\004\027\005\030\007\053\014\051\015\025\022\054" +
    "\025\046\027\044\030\026\032\036\035\020\041\021\042" +
    "\045\001\002\000\022\006\uffb9\010\uffb9\012\uffb9\013\uffb9" +
    "\031\uffb9\037\uffb9\044\uffb9\045\uffb9\001\002\000\054\004" +
    "\027\005\030\006\uffb8\007\053\010\uffb8\012\uffb8\013\uffb8" +
    "\014\051\015\025\022\054\025\046\027\044\030\026\031" +
    "\uffb8\032\036\035\020\037\uffb8\041\021\042\045\044\uffb8" +
    "\045\uffb8\001\002\000\022\006\uffb7\010\uffb7\012\uffb7\013" +
    "\uffb7\031\uffb7\037\uffb7\044\uffb7\045\uffb7\001\002\000\006" +
    "\010\101\020\100\001\002\000\012\007\060\014\051\015" +
    "\025\022\056\001\002\000\056\004\uff8a\005\uff8a\006\uff8a" +
    "\007\uff8a\010\uff8a\012\uff8a\013\uff8a\014\uff8a\015\uff8a\020" +
    "\uff8a\022\uff8a\025\uff8a\027\uff8a\030\uff8a\031\uff8a\032\uff8a" +
    "\035\uff8a\037\uff8a\041\uff8a\042\uff8a\044\uff8a\045\uff8a\001" +
    "\002\000\056\004\uff8b\005\uff8b\006\uff8b\007\uff8b\010\uff8b" +
    "\012\uff8b\013\uff8b\014\uff8b\015\uff8b\020\uff8b\022\uff8b\025" +
    "\uff8b\027\uff8b\030\uff8b\031\uff8b\032\uff8b\035\uff8b\037\uff8b" +
    "\041\uff8b\042\uff8b\044\uff8b\045\uff8b\001\002\000\022\006" +
    "\uff87\010\uff87\012\uff87\013\uff87\031\uff87\037\uff87\044\uff87" +
    "\045\uff87\001\002\000\004\010\106\001\002\000\006\010" +
    "\101\020\100\001\002\000\054\004\027\005\030\006\uffb0" +
    "\007\053\010\uffb0\012\uffb0\013\uffb0\014\051\015\025\022" +
    "\054\025\046\027\044\030\026\031\uffb0\032\036\035\020" +
    "\037\uffb0\041\021\042\045\044\uffb0\045\uffb0\001\002\000" +
    "\022\006\uffaf\010\uffaf\012\uffaf\013\uffaf\031\uffaf\037\uffaf" +
    "\044\uffaf\045\uffaf\001\002\000\014\007\115\014\051\015" +
    "\025\022\056\035\020\001\002\000\004\021\250\001\002" +
    "\000\006\010\122\037\120\001\002\000\010\010\uffa2\012" +
    "\uffa2\037\uffa2\001\002\000\010\010\uffa4\012\uffa4\037\uffa4" +
    "\001\002\000\014\007\115\014\051\015\025\022\056\035" +
    "\020\001\002\000\006\010\117\037\120\001\002\000\010" +
    "\010\uffa5\012\uffa5\037\uffa5\001\002\000\014\007\115\014" +
    "\051\015\025\022\056\035\020\001\002\000\010\010\uffa6" +
    "\012\uffa6\037\uffa6\001\002\000\004\012\123\001\002\000" +
    "\034\004\027\005\030\007\053\014\051\015\025\022\054" +
    "\025\046\027\044\030\026\032\036\035\020\041\021\042" +
    "\045\001\002\000\006\013\uffcf\045\uffcf\001\002\000\006" +
    "\013\uffd8\045\uffbf\001\002\000\006\013\uffd5\045\uffbb\001" +
    "\002\000\006\013\uffdd\045\uffc4\001\002\000\006\013\uffe7" +
    "\045\uffd1\001\002\000\006\013\uffce\045\uffce\001\002\000" +
    "\006\013\uffe2\045\uffc9\001\002\000\006\013\uffde\045\uffc5" +
    "\001\002\000\006\013\uffd7\045\uffbe\001\002\000\006\013" +
    "\uffdb\045\uffc2\001\002\000\006\013\uffd6\045\uffbd\001\002" +
    "\000\006\013\uffe3\045\uffca\001\002\000\004\045\233\001" +
    "\002\000\006\013\uffd2\045\uffba\001\002\000\006\013\uffe1" +
    "\045\uffc8\001\002\000\006\013\uffe6\045\uffd0\001\002\000" +
    "\012\006\225\013\uffd4\044\226\045\uffbc\001\002\000\006" +
    "\013\uffda\045\uffc1\001\002\000\014\013\uffdc\023\211\024" +
    "\212\033\213\045\uffc3\001\002\000\006\013\uffe4\045\uffcb" +
    "\001\002\000\006\013\uffd9\045\uffc0\001\002\000\004\013" +
    "\246\001\002\000\006\013\uffd3\045\uffcc\001\002\000\012" +
    "\006\156\013\uffe5\044\157\045\uffcd\001\002\000\006\013" +
    "\uffdf\045\uffc6\001\002\000\010\013\uffe0\020\100\045\uffc7" +
    "\001\002\000\004\012\242\001\002\000\014\007\115\014" +
    "\051\015\025\022\056\035\020\001\002\000\006\012\161" +
    "\037\120\001\002\000\034\004\027\005\030\007\053\014" +
    "\051\015\025\022\054\025\046\027\044\030\026\032\036" +
    "\035\020\041\021\042\045\001\002\000\006\013\uffbf\045" +
    "\uffbf\001\002\000\006\013\uffbb\045\uffbb\001\002\000\006" +
    "\013\uffc4\045\uffc4\001\002\000\006\013\uffd1\045\uffd1\001" +
    "\002\000\006\013\uffc9\045\uffc9\001\002\000\006\013\uffc5" +
    "\045\uffc5\001\002\000\006\013\uffbe\045\uffbe\001\002\000" +
    "\006\013\uffc2\045\uffc2\001\002\000\006\013\uffbd\045\uffbd" +
    "\001\002\000\006\013\uffca\045\uffca\001\002\000\006\013" +
    "\241\045\233\001\002\000\006\013\uffba\045\uffba\001\002" +
    "\000\006\013\uffc8\045\uffc8\001\002\000\006\013\uffd0\045" +
    "\uffd0\001\002\000\012\006\225\013\uffbc\044\226\045\uffbc" +
    "\001\002\000\006\013\uffc1\045\uffc1\001\002\000\014\013" +
    "\uffc3\023\211\024\212\033\213\045\uffc3\001\002\000\006" +
    "\013\uffcb\045\uffcb\001\002\000\006\013\uffc0\045\uffc0\001" +
    "\002\000\006\013\uffcc\045\uffcc\001\002\000\012\006\156" +
    "\013\uffcd\044\157\045\uffcd\001\002\000\006\013\uffc6\045" +
    "\uffc6\001\002\000\010\013\uffc7\020\100\045\uffc7\001\002" +
    "\000\004\022\221\001\002\000\004\022\215\001\002\000" +
    "\054\004\027\005\030\006\uff92\007\053\010\uff92\012\uff92" +
    "\013\uff92\014\051\015\025\022\054\025\046\027\044\030" +
    "\026\031\uff92\032\036\035\020\037\uff92\041\021\042\045" +
    "\044\uff92\045\uff92\001\002\000\022\006\uff91\010\uff91\012" +
    "\uff91\013\uff91\031\uff91\037\uff91\044\uff91\045\uff91\001\002" +
    "\000\004\040\216\001\002\000\004\005\030\001\002\000" +
    "\054\004\027\005\030\006\uff8d\007\053\010\uff8d\012\uff8d" +
    "\013\uff8d\014\051\015\025\022\054\025\046\027\044\030" +
    "\026\031\uff8d\032\036\035\020\037\uff8d\041\021\042\045" +
    "\044\uff8d\045\uff8d\001\002\000\022\006\uff8c\010\uff8c\012" +
    "\uff8c\013\uff8c\031\uff8c\037\uff8c\044\uff8c\045\uff8c\001\002" +
    "\000\004\040\222\001\002\000\004\005\030\001\002\000" +
    "\054\004\027\005\030\006\uff8f\007\053\010\uff8f\012\uff8f" +
    "\013\uff8f\014\051\015\025\022\054\025\046\027\044\030" +
    "\026\031\uff8f\032\036\035\020\037\uff8f\041\021\042\045" +
    "\044\uff8f\045\uff8f\001\002\000\022\006\uff8e\010\uff8e\012" +
    "\uff8e\013\uff8e\031\uff8e\037\uff8e\044\uff8e\045\uff8e\001\002" +
    "\000\004\012\235\001\002\000\014\007\115\014\051\015" +
    "\025\022\056\035\020\001\002\000\006\012\230\037\120" +
    "\001\002\000\034\004\027\005\030\007\053\014\051\015" +
    "\025\022\054\025\046\027\044\030\026\032\036\035\020" +
    "\041\021\042\045\001\002\000\006\013\232\045\233\001" +
    "\002\000\022\006\uffab\010\uffab\012\uffab\013\uffab\031\uffab" +
    "\037\uffab\044\uffab\045\uffab\001\002\000\040\004\027\005" +
    "\030\007\053\013\uffa1\014\051\015\025\022\054\025\046" +
    "\027\044\030\026\032\036\035\020\041\021\042\045\045" +
    "\uffa1\001\002\000\006\013\uffa0\045\uffa0\001\002\000\034" +
    "\004\027\005\030\007\053\014\051\015\025\022\054\025" +
    "\046\027\044\030\026\032\036\035\020\041\021\042\045" +
    "\001\002\000\006\013\237\045\233\001\002\000\054\004" +
    "\027\005\030\006\uffaa\007\053\010\uffaa\012\uffaa\013\uffaa" +
    "\014\051\015\025\022\054\025\046\027\044\030\026\031" +
    "\uffaa\032\036\035\020\037\uffaa\041\021\042\045\044\uffaa" +
    "\045\uffaa\001\002\000\022\006\uffa8\010\uffa8\012\uffa8\013" +
    "\uffa8\031\uffa8\037\uffa8\044\uffa8\045\uffa8\001\002\000\022" +
    "\006\uffac\010\uffac\012\uffac\013\uffac\031\uffac\037\uffac\044" +
    "\uffac\045\uffac\001\002\000\034\004\027\005\030\007\053" +
    "\014\051\015\025\022\054\025\046\027\044\030\026\032" +
    "\036\035\020\041\021\042\045\001\002\000\006\013\244" +
    "\045\233\001\002\000\054\004\027\005\030\006\uffa9\007" +
    "\053\010\uffa9\012\uffa9\013\uffa9\014\051\015\025\022\054" +
    "\025\046\027\044\030\026\031\uffa9\032\036\035\020\037" +
    "\uffa9\041\021\042\045\044\uffa9\045\uffa9\001\002\000\022" +
    "\006\uffa7\010\uffa7\012\uffa7\013\uffa7\031\uffa7\037\uffa7\044" +
    "\uffa7\045\uffa7\001\002\000\054\004\027\005\030\006\uff9b" +
    "\007\053\010\uff9b\012\uff9b\013\uff9b\014\051\015\025\022" +
    "\054\025\046\027\044\030\026\031\uff9b\032\036\035\020" +
    "\037\uff9b\041\021\042\045\044\uff9b\045\uff9b\001\002\000" +
    "\022\006\uff9a\010\uff9a\012\uff9a\013\uff9a\031\uff9a\037\uff9a" +
    "\044\uff9a\045\uff9a\001\002\000\010\014\051\015\025\022" +
    "\056\001\002\000\010\010\uffa3\012\uffa3\037\uffa3\001\002" +
    "\000\010\014\051\015\025\022\056\001\002\000\004\010" +
    "\254\001\002\000\054\004\027\005\030\006\uffb2\007\053" +
    "\010\uffb2\012\uffb2\013\uffb2\014\051\015\025\022\054\025" +
    "\046\027\044\030\026\031\uffb2\032\036\035\020\037\uffb2" +
    "\041\021\042\045\044\uffb2\045\uffb2\001\002\000\022\006" +
    "\uffb1\010\uffb1\012\uffb1\013\uffb1\031\uffb1\037\uffb1\044\uffb1" +
    "\045\uffb1\001\002\000\012\014\051\015\025\022\056\042" +
    "\045\001\002\000\004\010\263\001\002\000\004\010\261" +
    "\001\002\000\054\004\027\005\030\006\uffb6\007\053\010" +
    "\uffb6\012\uffb6\013\uffb6\014\051\015\025\022\054\025\046" +
    "\027\044\030\026\031\uffb6\032\036\035\020\037\uffb6\041" +
    "\021\042\045\044\uffb6\045\uffb6\001\002\000\022\006\uffb3" +
    "\010\uffb3\012\uffb3\013\uffb3\031\uffb3\037\uffb3\044\uffb3\045" +
    "\uffb3\001\002\000\054\004\027\005\030\006\uffb5\007\053" +
    "\010\uffb5\012\uffb5\013\uffb5\014\051\015\025\022\054\025" +
    "\046\027\044\030\026\031\uffb5\032\036\035\020\037\uffb5" +
    "\041\021\042\045\044\uffb5\045\uffb5\001\002\000\022\006" +
    "\uffb4\010\uffb4\012\uffb4\013\uffb4\031\uffb4\037\uffb4\044\uffb4" +
    "\045\uffb4\001\002\000\004\002\uffff\001\002\000\054\004" +
    "\027\005\030\006\uff94\007\053\010\uff94\012\uff94\013\uff94" +
    "\014\051\015\025\022\054\025\046\027\044\030\026\031" +
    "\uff94\032\036\035\020\037\uff94\041\021\042\045\044\uff94" +
    "\045\uff94\001\002\000\022\006\uff93\010\uff93\012\uff93\013" +
    "\uff93\031\uff93\037\uff93\044\uff93\045\uff93\001\002\000\010" +
    "\014\051\015\025\022\056\001\002\000\004\016\272\001" +
    "\002\000\062\004\uff96\005\uff96\006\uff96\007\uff96\010\uff96" +
    "\012\uff96\013\uff96\014\uff96\015\uff96\022\uff96\023\uff96\024" +
    "\uff96\025\uff96\027\uff96\030\uff96\031\uff96\032\uff96\033\uff96" +
    "\035\uff96\037\uff96\041\uff96\042\uff96\044\uff96\045\uff96\001" +
    "\002\000\006\012\274\037\120\001\002\000\034\004\027" +
    "\005\030\007\053\014\051\015\025\022\054\025\046\027" +
    "\044\030\026\032\036\035\020\041\021\042\045\001\002" +
    "\000\006\013\276\045\233\001\002\000\054\004\027\005" +
    "\030\006\uffae\007\053\010\uffae\012\uffae\013\uffae\014\051" +
    "\015\025\022\054\025\046\027\044\030\026\031\uffae\032" +
    "\036\035\020\037\uffae\041\021\042\045\044\uffae\045\uffae" +
    "\001\002\000\022\006\uffad\010\uffad\012\uffad\013\uffad\031" +
    "\uffad\037\uffad\044\uffad\045\uffad\001\002\000\004\022\301" +
    "\001\002\000\004\040\302\001\002\000\004\015\303\001" +
    "\002\000\004\040\304\001\002\000\004\015\305\001\002" +
    "\000\004\040\306\001\002\000\004\015\307\001\002\000" +
    "\004\010\310\001\002\000\004\012\311\001\002\000\034" +
    "\004\027\005\030\007\053\014\051\015\025\022\054\025" +
    "\046\027\044\030\026\032\036\035\020\041\021\042\045" +
    "\001\002\000\004\013\313\001\002\000\054\004\027\005" +
    "\030\006\uff9d\007\053\010\uff9d\012\uff9d\013\uff9d\014\051" +
    "\015\025\022\054\025\046\027\044\030\026\031\uff9d\032" +
    "\036\035\020\037\uff9d\041\021\042\045\044\uff9d\045\uff9d" +
    "\001\002\000\022\006\uff9c\010\uff9c\012\uff9c\013\uff9c\031" +
    "\uff9c\037\uff9c\044\uff9c\045\uff9c\001\002\000\004\005\030" +
    "\001\002\000\004\010\317\001\002\000\054\004\027\005" +
    "\030\006\uff9f\007\053\010\uff9f\012\uff9f\013\uff9f\014\051" +
    "\015\025\022\054\025\046\027\044\030\026\031\uff9f\032" +
    "\036\035\020\037\uff9f\041\021\042\045\044\uff9f\045\uff9f" +
    "\001\002\000\022\006\uff9e\010\uff9e\012\uff9e\013\uff9e\031" +
    "\uff9e\037\uff9e\044\uff9e\045\uff9e\001\002\000\004\002\001" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\317\000\004\002\003\001\001\000\002\001\001\000" +
    "\064\003\037\004\042\005\041\007\011\011\023\013\005" +
    "\015\013\017\031\020\007\022\036\026\012\027\030\031" +
    "\022\032\051\033\047\034\014\035\010\036\034\037\016" +
    "\040\033\041\040\042\006\043\015\044\021\046\032\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\010\272\011\110\037\112\045" +
    "\113\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\036\265\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\064\003\103\004\042\005\041\007\011" +
    "\011\023\013\005\015\013\017\031\020\007\022\036\026" +
    "\012\027\030\031\022\032\104\033\047\034\014\035\010" +
    "\036\034\037\016\040\033\041\040\042\006\043\015\044" +
    "\021\046\032\001\001\000\002\001\001\000\006\011\023" +
    "\032\056\001\001\000\002\001\001\000\064\003\102\004" +
    "\042\005\041\007\011\011\023\013\005\015\013\017\031" +
    "\020\007\022\036\026\012\027\030\031\022\032\051\033" +
    "\047\034\014\035\010\036\034\037\016\040\033\041\040" +
    "\042\006\043\015\044\021\046\032\001\001\000\006\011" +
    "\023\032\076\001\001\000\002\001\001\000\006\011\063" +
    "\044\062\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\071\001\001\000\002\001\001\000" +
    "\064\003\073\004\042\005\041\007\011\011\023\013\005" +
    "\015\013\017\031\020\007\022\036\026\012\027\030\031" +
    "\022\032\051\033\047\034\014\035\010\036\034\037\016" +
    "\040\033\041\040\042\006\043\015\044\021\046\032\001" +
    "\001\000\002\001\001\000\064\003\075\004\042\005\041" +
    "\007\011\011\023\013\005\015\013\017\031\020\007\022" +
    "\036\026\012\027\030\031\022\032\051\033\047\034\014" +
    "\035\010\036\034\037\016\040\033\041\040\042\006\043" +
    "\015\044\021\046\032\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\011\023\032\101\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\064\003\106\004\042\005\041\007" +
    "\011\011\023\013\005\015\013\017\031\020\007\022\036" +
    "\026\012\027\030\031\022\032\051\033\047\034\014\035" +
    "\010\036\034\037\016\040\033\041\040\042\006\043\015" +
    "\044\021\046\032\001\001\000\002\001\001\000\012\010" +
    "\111\011\110\037\112\045\113\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\010\115\011\110\037\112\045\113\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\010\120\011\110\037" +
    "\112\045\113\001\001\000\002\001\001\000\002\001\001" +
    "\000\070\004\152\005\151\007\127\011\023\013\123\015" +
    "\130\017\142\020\125\022\146\024\137\025\150\026\131" +
    "\027\141\030\140\031\136\032\154\033\153\034\132\035" +
    "\126\036\145\037\134\040\144\041\147\042\124\043\133" +
    "\044\135\046\143\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\010" +
    "\157\011\110\037\112\045\113\001\001\000\002\001\001" +
    "\000\066\004\205\005\204\007\164\011\023\013\123\015" +
    "\130\017\176\020\162\022\202\024\173\026\165\027\175" +
    "\030\174\031\172\032\207\033\206\034\166\035\163\036" +
    "\201\037\170\040\200\041\203\042\161\043\167\044\171" +
    "\046\177\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\064\003\213\004\042\005\041\007\011\011\023\013" +
    "\005\015\013\017\031\020\007\022\036\026\012\027\030" +
    "\031\022\032\051\033\047\034\014\035\010\036\034\037" +
    "\016\040\033\041\040\042\006\043\015\044\021\046\032" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\036" +
    "\216\001\001\000\064\003\217\004\042\005\041\007\011" +
    "\011\023\013\005\015\013\017\031\020\007\022\036\026" +
    "\012\027\030\031\022\032\051\033\047\034\014\035\010" +
    "\036\034\037\016\040\033\041\040\042\006\043\015\044" +
    "\021\046\032\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\036\222\001\001\000\064\003\223\004\042\005" +
    "\041\007\011\011\023\013\005\015\013\017\031\020\007" +
    "\022\036\026\012\027\030\031\022\032\051\033\047\034" +
    "\014\035\010\036\034\037\016\040\033\041\040\042\006" +
    "\043\015\044\021\046\032\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\010\226\011\110\037\112\045\113" +
    "\001\001\000\002\001\001\000\066\004\205\005\204\007" +
    "\164\011\023\013\123\015\130\017\176\020\162\022\202" +
    "\024\230\026\165\027\175\030\174\031\172\032\207\033" +
    "\206\034\166\035\163\036\201\037\170\040\200\041\203" +
    "\042\161\043\167\044\171\046\177\001\001\000\002\001" +
    "\001\000\002\001\001\000\066\004\205\005\204\007\164" +
    "\011\023\013\123\015\130\017\176\020\162\022\202\024" +
    "\233\026\165\027\175\030\174\031\172\032\207\033\206" +
    "\034\166\035\163\036\201\037\170\040\200\041\203\042" +
    "\161\043\167\044\171\046\177\001\001\000\002\001\001" +
    "\000\066\004\205\005\204\007\164\011\023\013\123\015" +
    "\130\017\176\020\162\022\202\024\235\026\165\027\175" +
    "\030\174\031\172\032\207\033\206\034\166\035\163\036" +
    "\201\037\170\040\200\041\203\042\161\043\167\044\171" +
    "\046\177\001\001\000\002\001\001\000\064\003\237\004" +
    "\042\005\041\007\011\011\023\013\005\015\013\017\031" +
    "\020\007\022\036\026\012\027\030\031\022\032\051\033" +
    "\047\034\014\035\010\036\034\037\016\040\033\041\040" +
    "\042\006\043\015\044\021\046\032\001\001\000\002\001" +
    "\001\000\002\001\001\000\066\004\205\005\204\007\164" +
    "\011\023\013\123\015\130\017\176\020\162\022\202\024" +
    "\242\026\165\027\175\030\174\031\172\032\207\033\206" +
    "\034\166\035\163\036\201\037\170\040\200\041\203\042" +
    "\161\043\167\044\171\046\177\001\001\000\002\001\001" +
    "\000\064\003\244\004\042\005\041\007\011\011\023\013" +
    "\005\015\013\017\031\020\007\022\036\026\012\027\030" +
    "\031\022\032\051\033\047\034\014\035\010\036\034\037" +
    "\016\040\033\041\040\042\006\043\015\044\021\046\032" +
    "\001\001\000\002\001\001\000\064\003\246\004\042\005" +
    "\041\007\011\011\023\013\005\015\013\017\031\020\007" +
    "\022\036\026\012\027\030\031\022\032\051\033\047\034" +
    "\014\035\010\036\034\037\016\040\033\041\040\042\006" +
    "\043\015\044\021\046\032\001\001\000\002\001\001\000" +
    "\004\011\250\001\001\000\002\001\001\000\004\011\252" +
    "\001\001\000\002\001\001\000\064\003\254\004\042\005" +
    "\041\007\011\011\023\013\005\015\013\017\031\020\007" +
    "\022\036\026\012\027\030\031\022\032\051\033\047\034" +
    "\014\035\010\036\034\037\016\040\033\041\040\042\006" +
    "\043\015\044\021\046\032\001\001\000\002\001\001\000" +
    "\006\011\257\044\256\001\001\000\002\001\001\000\002" +
    "\001\001\000\064\003\261\004\042\005\041\007\011\011" +
    "\023\013\005\015\013\017\031\020\007\022\036\026\012" +
    "\027\030\031\022\032\051\033\047\034\014\035\010\036" +
    "\034\037\016\040\033\041\040\042\006\043\015\044\021" +
    "\046\032\001\001\000\002\001\001\000\064\003\263\004" +
    "\042\005\041\007\011\011\023\013\005\015\013\017\031" +
    "\020\007\022\036\026\012\027\030\031\022\032\051\033" +
    "\047\034\014\035\010\036\034\037\016\040\033\041\040" +
    "\042\006\043\015\044\021\046\032\001\001\000\002\001" +
    "\001\000\002\001\001\000\064\003\266\004\042\005\041" +
    "\007\011\011\023\013\005\015\013\017\031\020\007\022" +
    "\036\026\012\027\030\031\022\032\051\033\047\034\014" +
    "\035\010\036\034\037\016\040\033\041\040\042\006\043" +
    "\015\044\021\046\032\001\001\000\002\001\001\000\004" +
    "\011\270\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\066\004\205\005\204\007\164\011\023" +
    "\013\123\015\130\017\176\020\162\022\202\024\274\026" +
    "\165\027\175\030\174\031\172\032\207\033\206\034\166" +
    "\035\163\036\201\037\170\040\200\041\203\042\161\043" +
    "\167\044\171\046\177\001\001\000\002\001\001\000\064" +
    "\003\276\004\042\005\041\007\011\011\023\013\005\015" +
    "\013\017\031\020\007\022\036\026\012\027\030\031\022" +
    "\032\051\033\047\034\014\035\010\036\034\037\016\040" +
    "\033\041\040\042\006\043\015\044\021\046\032\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\070\004\152\005\151\007\127\011\023\013\123" +
    "\015\130\017\142\020\125\022\146\024\137\025\311\026" +
    "\131\027\141\030\140\031\136\032\154\033\153\034\132" +
    "\035\126\036\145\037\134\040\144\041\147\042\124\043" +
    "\133\044\135\046\143\001\001\000\002\001\001\000\064" +
    "\003\313\004\042\005\041\007\011\011\023\013\005\015" +
    "\013\017\031\020\007\022\036\026\012\027\030\031\022" +
    "\032\051\033\047\034\014\035\010\036\034\037\016\040" +
    "\033\041\040\042\006\043\015\044\021\046\032\001\001" +
    "\000\002\001\001\000\004\036\315\001\001\000\002\001" +
    "\001\000\064\003\317\004\042\005\041\007\011\011\023" +
    "\013\005\015\013\017\031\020\007\022\036\026\012\027" +
    "\030\031\022\032\051\033\047\034\014\035\010\036\034" +
    "\037\016\040\033\041\040\042\006\043\015\044\021\046" +
    "\032\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;  
    
    public void syntax_error(Symbol s){
        this.s = s; 
        report_error("Erro sintático - Linha: " +(s.right + 1) + " - Coluna: " + s.left + " - Token: \"" + s.value + "\"\n", null);     
    }

    public Symbol getS(){
        return this.s;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Expressao_Aritmetica ::= VAR ATR Operacao Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expressao_Aritmetica",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Expressao_Aritmetica ::= VAR ATR Operacao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expressao_Aritmetica",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Operacao ::= Valor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Operacao",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // Operacao ::= AP Operacao FP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Operacao",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Operacao ::= Operacao OP Operacao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Operacao",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Receber ::= Nos RECEIVE VAR SEPARADOR Nos Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Receber",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Receber ::= Nos RECEIVE VAR SEPARADOR Nos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Receber",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Envio ::= Nos SEND VAR SEPARADOR Nos Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Envio",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Envio ::= Nos SEND VAR SEPARADOR Nos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Envio",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Fimlinha ::= PTV 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Fimlinha",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Desligar ::= Nos STOP Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Desligar",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Desligar ::= Nos STOP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Desligar",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Ligar ::= START Nos Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Ligar",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Ligar ::= START Nos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Ligar",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Nos ::= ID 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nos",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Nos ::= ID AC Valor FC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Nos",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Valor ::= VAR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Valor",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Valor ::= STRING 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Valor",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Valor ::= NUM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Valor",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Enquanto ::= WHILE AP Comparacao FP ACH Conteudo_Sub_Loop FCH Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Enquanto",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Enquanto ::= WHILE AP Comparacao FP ACH Conteudo_Sub_Loop FCH 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Enquanto",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // For ::= FOR AP VAR SEPARADOR NUM SEPARADOR NUM SEPARADOR NUM FP ACH Conteudo_Sub_Loop FCH Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("For",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // For ::= FOR AP VAR SEPARADOR NUM SEPARADOR NUM SEPARADOR NUM FP ACH Conteudo_Sub_Loop FCH 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("For",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Ocupado ::= BUSY AP Nos FP Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Ocupado",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Ocupado ::= BUSY AP Nos FP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Ocupado",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Interromper ::= Conteudo_Sub_Se BREAK Conteudo_Sub_Se 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Interromper",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Interromper ::= Conteudo_Sub_Se BREAK 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Interromper",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Comp ::= Ocupado 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Comp",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Comp ::= Valor COMP Valor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Comp",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // Comparacao ::= Comp 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Comparacao",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Comparacao ::= AP Comparacao FP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Comparacao",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Comparacao ::= Comparacao OPLOG Comparacao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Comparacao",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Condicao_sen ::= Condicao ELSE ACH Conteudo_Sub_Se FCH Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Condicao_sen",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Condicao_sen ::= Condicao_sepa ELSE ACH Conteudo_Sub_Se FCH Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Condicao_sen",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Condicao_sen ::= Condicao ELSE ACH Conteudo_Sub_Se FCH 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Condicao_sen",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Condicao_sen ::= Condicao_sepa ELSE ACH Conteudo_Sub_Se FCH 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Condicao_sen",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Condicao_sepa ::= Condicao_sepa ELIF Comparacao ACH Conteudo_Sub_Se FCH 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Condicao_sepa",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Condicao_sepa ::= Condicao ELIF Comparacao ACH Conteudo_Sub_Se FCH 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Condicao_sepa",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Condicao ::= IF Comparacao ACH Conteudo_Sub_Se FCH Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Condicao",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Condicao ::= IF Comparacao ACH Conteudo_Sub_Se FCH 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Condicao",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Parenteses ::= AP Conteudo FP Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Parenteses",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Parenteses ::= AP Conteudo FP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Parenteses",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Arquivo ::= FILE AP Valor FP Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Arquivo",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Arquivo ::= FILE AP Valor FP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Arquivo",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Escrever ::= WR AP Valor FP Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Escrever",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // Escrever ::= WR AP Arquivo FP Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Escrever",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Escrever ::= WR AP Arquivo FP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Escrever",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Escrever ::= WR AP Valor FP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Escrever",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Ler ::= VAR ATR RD AP Arquivo FP Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Ler",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Ler ::= VAR ATR RD AP Arquivo FP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Ler",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Ler ::= VAR ATR RD AP Valor FP VAR ATR RD AP Valor FP Conteudo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Ler",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Conteudo_Sub_Se ::= Interromper 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Conteudo_Sub_Se ::= Enquanto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Conteudo_Sub_Se ::= Condicao_sepa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Conteudo_Sub_Se ::= Arquivo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Conteudo_Sub_Se ::= Escrever 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Conteudo_Sub_Se ::= Ler 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Conteudo_Sub_Se ::= Desligar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Conteudo_Sub_Se ::= Ligar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Conteudo_Sub_Se ::= Ocupado 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Conteudo_Sub_Se ::= Nos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Conteudo_Sub_Se ::= Parenteses 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Conteudo_Sub_Se ::= Receber 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Conteudo_Sub_Se ::= Fimlinha 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Conteudo_Sub_Se ::= Operacao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Conteudo_Sub_Se ::= Comentarios 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Conteudo_Sub_Se ::= Envio 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Conteudo_Sub_Se ::= Expressao_Aritmetica 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Conteudo_Sub_Se ::= Print 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Conteudo_Sub_Se ::= Condicao_sen 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Conteudo_Sub_Se ::= Condicao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Conteudo_Sub_Se ::= Chamada_Funcao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Conteudo_Sub_Se ::= Definicao_Funcao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Conteudo_Sub_Se ::= For 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Conteudo_Sub_Se ::= Variavel 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Se",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Conteudo_Sub_Loop ::= Interromper 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Conteudo_Sub_Loop ::= Condicao_sen 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Conteudo_Sub_Loop ::= Condicao_sepa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Conteudo_Sub_Loop ::= Enquanto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Conteudo_Sub_Loop ::= Arquivo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Conteudo_Sub_Loop ::= Escrever 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Conteudo_Sub_Loop ::= Ler 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // Conteudo_Sub_Loop ::= Desligar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Conteudo_Sub_Loop ::= Ligar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Conteudo_Sub_Loop ::= Ocupado 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Conteudo_Sub_Loop ::= Nos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Conteudo_Sub_Loop ::= Parenteses 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Conteudo_Sub_Loop ::= Receber 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Conteudo_Sub_Loop ::= Fimlinha 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Conteudo_Sub_Loop ::= Operacao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Conteudo_Sub_Loop ::= Comentarios 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Conteudo_Sub_Loop ::= Envio 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Conteudo_Sub_Loop ::= Expressao_Aritmetica 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Conteudo_Sub_Loop ::= Print 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Conteudo_Sub_Loop ::= Condicao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Conteudo_Sub_Loop ::= For 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Conteudo_Sub_Loop ::= Variavel 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo_Sub_Loop",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Conteudo ::= Condicao_sen 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Conteudo ::= Condicao_sepa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Conteudo ::= Enquanto 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Conteudo ::= Arquivo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Conteudo ::= Escrever 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Conteudo ::= Ler 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Conteudo ::= Desligar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Conteudo ::= Ligar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Conteudo ::= Ocupado 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Conteudo ::= Nos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Conteudo ::= Parenteses 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Conteudo ::= Receber 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Conteudo ::= Fimlinha 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Conteudo ::= Operacao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Conteudo ::= Comentarios 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Conteudo ::= Envio 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Conteudo ::= Expressao_Aritmetica 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Conteudo ::= Print 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Conteudo ::= Condicao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Conteudo ::= Chamada_Funcao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Conteudo ::= Definicao_Funcao 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Conteudo ::= For 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Conteudo ::= Variavel 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Conteudo",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Inicio_Programa ::= BEGIN Conteudo END 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Inicio_Programa",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Inicio_Programa ::= BEGIN END 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("Inicio_Programa",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Inicio_Programa EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

