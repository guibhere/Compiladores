/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AnaliseLexica;

/**
 *
 * @author Xen
 */
public class Tokens extends javax.swing.JFrame {

    /**
     * Creates new form Tokens
     */
    public Tokens() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"IF", "se", "Condicional Principal"},
                {"ELIF", "sepa", "Condicional Secundario"},
                {"ELSE", "sen", "Condicional Negativo"},
                {"AP", "(", "Abre Parenteses"},
                {"FP", ")", "Fecha Parenteses"},
                {"AC", "[", "Abre Colchetes"},
                {"FC", "]", "Fecha Colchetes"},
                {"ACH", "{", "Abre Chaves"},
                {"FCH", "}", "Fecha Chaves"},
                {"OP", "'+','-','*','/','^'", "Operadores Aritimeticos"},
                {"ATR", "'='", "Atribuição"},
                {"COMP", "'>','<','>=','<=','==','!'", "Comparadores"},
                {"OPLOG", "'&&','||'", "Operadores Logicos"},
                {"WHILE", "WHILE", "Estrutura de repetição Condicional"},
                {"FOR", "repeat", "Estrutura de repetição "},
                {"RD", "in", "Leitor de entrada"},
                {"WR", "out", "Função de Saida"},
                {"BEGIN", "init", "Inicio do Programa"},
                {"END", "finit", "Fim do Programa"},
                {"START", ">>>", "Inicia Nó"},
                {"STOP", "<<<", "Desliga Nó"},
                {"FILE", "\"arq.abrir\", \"arq.fechar\", \"arq.gravar\"", "Operações com Arquivos"},
                {"VAR", "\"@a\",\"@var1\"", "Variaveis"},
                {"STRING", "\"$ Aqui tem uma String $\"", "Notação de String"},
                {"NUM", "\"45614614\", \"123\"", "Numeros"},
                {"SEND", "->", "Envia conteudo para um nó"},
                {"RECEIVE", "<-", "Recebe conteudo de um nó"},
                {"BUSY", "#", "Verifica disponibilidade de um nó"},
                {"SEPARADOR", ",", "Separa Argumentos e Parametros de certas Funções"},
                {"ID", "\"id1\", \"id[@x]\"", "Indentificador de nós"},
                {"BREAK", "\"interrupt\"", "Interrompe Subrotina"}
            },
            new String [] {
                "Token", "Lexema", "Descrição"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tokens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tokens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tokens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tokens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tokens().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
